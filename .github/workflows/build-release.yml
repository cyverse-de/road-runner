name: build-release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  pipeline:
    name: Create Release
    runs-on: ubuntu-20.04
    env:
      GH_API_TOKEN: ${{secrets.GH_API_TOKEN}}
      GH_DE_RELEASES_PUSH_TOKEN: ${{secrets.GH_DE_RELEASES_PUSH_TOKEN}}
    steps:

    - name: Set Environment
      run: |
        echo "REPO_NAME=${GITHUB_REPOSITORY/#*\//}" >> "${GITHUB_ENV}"
        echo "REPO_URI=https://github.com/${GITHUB_REPOSITORY}" >> "${GITHUB_ENV}"
        echo "EXECUTABLE_NAME=${GITHUB_REPOSITORY/#*\//}" >> "${GITHUB_ENV}"
        echo "RELEASE_NAME=${GITHUB_REF_NAME}" >> "${GITHUB_ENV}"

    - name: Checkout Repo
      id: checkout
      uses: actions/checkout@v4
      with:
        path: "${{env.REPO_NAME}}"

    - name: Set up Go Tools
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.21.0'
        cache-dependency-path: "${{env.REPO_NAME}}/go.sum"

    - name: Build Executable
      run: |
        export PATH=${GOROOT}/bin:${PATH}
        cd "${REPO_NAME}"
        go build .

    - name: Create Release
      uses: ncipollo/release-action@v1
      if: ${{ env.GH_API_TOKEN != '' }}
      with:
        artifacts: "${{ env.REPO_NAME }}/${{ env.EXECUTABLE_NAME }}"

    - name: Pull de-releases
      uses: actions/checkout@v4
      if: ${{ env.GH_DE_RELEASES_PUSH_TOKEN != '' }}
      with:
        repository: cyverse-de/de-releases
        path: de-releases
        token: ${{ env.GH_DE_RELEASES_PUSH_TOKEN }}

    - name: Install jq
      if: ${{ env.GH_DE_RELEASES_PUSH_TOKEN != '' }}
      uses: dcarbone/install-jq-action@v2

    - name: Update Release Record
      if: ${{ env.GH_DE_RELEASES_PUSH_TOKEN != '' }}
      run: |
        cd de-releases
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        mkdir -p deployables
        echo "{\"repository\":\"${REPO_URI}\",\"release\":\"${RELEASE_NAME}\"}" | jq > "deployables/${REPO_NAME}.json"
        git add "deployables/${REPO_NAME}.json"
        git commit -m "updated the deployable version for ${REPO_NAME}"
        git push
